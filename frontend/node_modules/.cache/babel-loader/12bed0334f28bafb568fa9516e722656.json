{"ast":null,"code":"var _jsxFileName = \"E:\\\\thesis web crawler\\\\frontend\\\\src\\\\components\\\\ResultsDisplay.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/ResultsDisplay.js\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultsDisplay() {\n  _s();\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const fetchResults = async () => {\n    setLoading(true);\n    setMessage(\"\");\n    try {\n      const response = await axios.get(\"http://localhost:5000/results\");\n      setResults(response.data);\n    } catch (error) {\n      setMessage(\"No results found or an error occurred.\");\n      console.error(\"Error fetching results:\", error);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    // Fetch results initially and set up polling every 30 seconds\n    fetchResults();\n    const interval = setInterval(() => {\n      fetchResults();\n    }, 30000); // 30 seconds\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Crawl Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading results...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this), !loading && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Chatbots Detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Keywords Detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date Collected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: results.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: item.url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: item.url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.detected_chatbots.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: item.detected_chatbots.map((chatbot, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: chatbot,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: [\"Chatbot \", idx + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 27\n                }, this)\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this) : \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.keywords_detected.join(\", \") || \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.date_collected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(ResultsDisplay, \"4XI8zU5/cOs51Ju+TSws2ieRmkc=\");\n_c = ResultsDisplay;\nexport default ResultsDisplay;\nvar _c;\n$RefreshReg$(_c, \"ResultsDisplay\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ResultsDisplay","_s","results","setResults","loading","setLoading","message","setMessage","fetchResults","response","get","data","error","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","href","url","target","rel","title","detected_chatbots","length","chatbot","idx","keywords_detected","join","date_collected","_c","$RefreshReg$"],"sources":["E:/thesis web crawler/frontend/src/components/ResultsDisplay.js"],"sourcesContent":["// frontend/src/components/ResultsDisplay.js\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction ResultsDisplay() {\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const fetchResults = async () => {\r\n    setLoading(true);\r\n    setMessage(\"\");\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/results\");\r\n      setResults(response.data);\r\n    } catch (error) {\r\n      setMessage(\"No results found or an error occurred.\");\r\n      console.error(\"Error fetching results:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch results initially and set up polling every 30 seconds\r\n    fetchResults();\r\n    const interval = setInterval(() => {\r\n      fetchResults();\r\n    }, 30000); // 30 seconds\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"results-display\">\r\n      <h2>Crawl Results</h2>\r\n      {loading && <p>Loading results...</p>}\r\n      {message && <p>{message}</p>}\r\n      {!loading && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>URL</th>\r\n              <th>Title</th>\r\n              <th>Chatbots Detected</th>\r\n              <th>Keywords Detected</th>\r\n              <th>Date Collected</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {results.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>\r\n                  <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {item.url}\r\n                  </a>\r\n                </td>\r\n                <td>{item.title}</td>\r\n                <td>\r\n                  {item.detected_chatbots.length > 0 ? (\r\n                    <ul>\r\n                      {item.detected_chatbots.map((chatbot, idx) => (\r\n                        <li key={idx}>\r\n                          <a\r\n                            href={chatbot}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                          >\r\n                            Chatbot {idx + 1}\r\n                          </a>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  ) : (\r\n                    \"None\"\r\n                  )}\r\n                </td>\r\n                <td>{item.keywords_detected.join(\", \") || \"None\"}</td>\r\n                <td>{item.date_collected}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultsDisplay;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BH,UAAU,CAAC,IAAI,CAAC;IAChBE,UAAU,CAAC,EAAE,CAAC;IACd,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,+BAA+B,CAAC;MACjEP,UAAU,CAACM,QAAQ,CAACE,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdL,UAAU,CAAC,wCAAwC,CAAC;MACpDM,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;IACAP,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAEDT,SAAS,CAAC,MAAM;IACd;IACAY,YAAY,CAAC,CAAC;IACd,MAAMM,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCP,YAAY,CAAC,CAAC;IAChB,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IACX,OAAO,MAAMQ,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAKkB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BnB,OAAA;MAAAmB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBlB,OAAO,iBAAIL,OAAA;MAAAmB,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACpChB,OAAO,iBAAIP,OAAA;MAAAmB,QAAA,EAAIZ;IAAO;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3B,CAAClB,OAAO,iBACPL,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,eACEnB,OAAA;UAAAmB,QAAA,gBACEnB,OAAA;YAAAmB,QAAA,EAAI;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACZvB,OAAA;YAAAmB,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdvB,OAAA;YAAAmB,QAAA,EAAI;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1BvB,OAAA;YAAAmB,QAAA,EAAI;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1BvB,OAAA;YAAAmB,QAAA,EAAI;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRvB,OAAA;QAAAmB,QAAA,EACGhB,OAAO,CAACqB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvB1B,OAAA;UAAAmB,QAAA,gBACEnB,OAAA;YAAAmB,QAAA,eACEnB,OAAA;cAAG2B,IAAI,EAAEF,IAAI,CAACG,GAAI;cAACC,MAAM,EAAC,QAAQ;cAACC,GAAG,EAAC,qBAAqB;cAAAX,QAAA,EACzDM,IAAI,CAACG;YAAG;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACLvB,OAAA;YAAAmB,QAAA,EAAKM,IAAI,CAACM;UAAK;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBvB,OAAA;YAAAmB,QAAA,EACGM,IAAI,CAACO,iBAAiB,CAACC,MAAM,GAAG,CAAC,gBAChCjC,OAAA;cAAAmB,QAAA,EACGM,IAAI,CAACO,iBAAiB,CAACR,GAAG,CAAC,CAACU,OAAO,EAAEC,GAAG,kBACvCnC,OAAA;gBAAAmB,QAAA,eACEnB,OAAA;kBACE2B,IAAI,EAAEO,OAAQ;kBACdL,MAAM,EAAC,QAAQ;kBACfC,GAAG,EAAC,qBAAqB;kBAAAX,QAAA,GAC1B,UACS,EAACgB,GAAG,GAAG,CAAC;gBAAA;kBAAAf,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACf;cAAC,GAPGY,GAAG;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAQR,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,GAEL;UACD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACLvB,OAAA;YAAAmB,QAAA,EAAKM,IAAI,CAACW,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAAC,IAAI;UAAM;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtDvB,OAAA;YAAAmB,QAAA,EAAKM,IAAI,CAACa;UAAc;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GA3BvBG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA4BV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrB,EAAA,CAhFQD,cAAc;AAAAsC,EAAA,GAAdtC,cAAc;AAkFvB,eAAeA,cAAc;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}