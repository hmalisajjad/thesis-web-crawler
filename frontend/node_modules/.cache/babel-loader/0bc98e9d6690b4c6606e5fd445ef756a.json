{"ast":null,"code":"var _jsxFileName = \"E:\\\\thesis web crawler\\\\frontend\\\\src\\\\components\\\\ResultsDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultsDisplay() {\n  _s();\n  const [results, setResults] = useState([]); // Default state as empty array\n  const [loading, setLoading] = useState(true); // Loading indicator\n  const [error, setError] = useState(null); // Error state\n\n  useEffect(() => {\n    let isMounted = true; // To prevent updating state on unmounted component\n\n    const fetchResults = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/results\");\n        if (!response.ok) {\n          throw new Error(`Error fetching results: ${response.status}`);\n        }\n        const data = await response.json();\n        if (isMounted) {\n          setResults(data || []); // Ensure results is always an array\n          setLoading(false);\n        }\n      } catch (err) {\n        if (isMounted) {\n          setError(err.message);\n          setLoading(false);\n        }\n      }\n    };\n    fetchResults();\n\n    // Cleanup function to prevent state update after unmount\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  // Render loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading crawl results...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Crawl Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), results.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No results found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Chatbots Detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Keywords Detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date Collected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: results.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: item.main_url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: item.main_url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.title || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.detected_chatbots && item.detected_chatbots.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: item.detected_chatbots.map((chatbot, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: chatbot\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this) : \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.keywords_detected && item.keywords_detected.length > 0 ? item.keywords_detected.join(\", \") : \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.date_collected || \"Unknown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(ResultsDisplay, \"Q8/V7MttfdzyQqu8hKbJggI50EU=\");\n_c = ResultsDisplay;\nexport default ResultsDisplay;\nvar _c;\n$RefreshReg$(_c, \"ResultsDisplay\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ResultsDisplay","_s","results","setResults","loading","setLoading","error","setError","isMounted","fetchResults","response","fetch","ok","Error","status","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","item","index","href","main_url","target","rel","title","detected_chatbots","chatbot","idx","keywords_detected","join","date_collected","_c","$RefreshReg$"],"sources":["E:/thesis web crawler/frontend/src/components/ResultsDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction ResultsDisplay() {\r\n  const [results, setResults] = useState([]); // Default state as empty array\r\n  const [loading, setLoading] = useState(true); // Loading indicator\r\n  const [error, setError] = useState(null); // Error state\r\n\r\n  useEffect(() => {\r\n    let isMounted = true; // To prevent updating state on unmounted component\r\n\r\n    const fetchResults = async () => {\r\n      try {\r\n        const response = await fetch(\"http://127.0.0.1:5000/results\");\r\n        if (!response.ok) {\r\n          throw new Error(`Error fetching results: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        if (isMounted) {\r\n          setResults(data || []); // Ensure results is always an array\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        if (isMounted) {\r\n          setError(err.message);\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchResults();\r\n\r\n    // Cleanup function to prevent state update after unmount\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  // Render loading state\r\n  if (loading) {\r\n    return <div>Loading crawl results...</div>;\r\n  }\r\n\r\n  // Render error state\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"results-display\">\r\n      <h2>Crawl Results</h2>\r\n      {results.length === 0 ? (\r\n        <p>No results found.</p>\r\n      ) : (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>URL</th>\r\n              <th>Title</th>\r\n              <th>Chatbots Detected</th>\r\n              <th>Keywords Detected</th>\r\n              <th>Date Collected</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {results.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>\r\n                  <a\r\n                    href={item.main_url}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    {item.main_url}\r\n                  </a>\r\n                </td>\r\n                <td>{item.title || \"N/A\"}</td>\r\n                <td>\r\n                  {item.detected_chatbots &&\r\n                  item.detected_chatbots.length > 0 ? (\r\n                    <ul>\r\n                      {item.detected_chatbots.map((chatbot, idx) => (\r\n                        <li key={idx}>{chatbot}</li>\r\n                      ))}\r\n                    </ul>\r\n                  ) : (\r\n                    \"None\"\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {item.keywords_detected && item.keywords_detected.length > 0\r\n                    ? item.keywords_detected.join(\", \")\r\n                    : \"None\"}\r\n                </td>\r\n                <td>{item.date_collected || \"Unknown\"}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultsDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}