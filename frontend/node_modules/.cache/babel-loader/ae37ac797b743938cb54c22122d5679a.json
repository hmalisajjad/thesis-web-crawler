{"ast":null,"code":"var _jsxFileName = \"E:\\\\thesis web crawler\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CrawlerControl from \"./components/CrawlerControl\";\nimport ResultsDisplay from \"./components/ResultsDisplay\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const handleStartCrawl = async () => {\n    setLoading(true);\n    setMessage(\"\");\n    try {\n      const response = await axios.post(\"http://localhost:5000/start-crawl\");\n      console.log(response);\n      if (response.data.success == true) {\n        setMessage(\"Crawling completed successfully!\");\n        fetchResults(); // Fetch updated results after crawling\n      } else {\n        setMessage(\"Crawling failed.\");\n      }\n    } catch (error) {\n      setMessage(\"An error occurred while starting the crawl.\");\n      console.error(\"Error starting crawl:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchResults = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/results\");\n      setResults(response.data.data);\n    } catch (error) {\n      setMessage(\"Failed to fetch results.\");\n      console.error(\"Error fetching results:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chatbot Detection Web Crawler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CrawlerControl, {\n      onStartCrawl: handleStartCrawl,\n      loading: loading,\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultsDisplay, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Rdf8RcpRQ+zc2P+zDO61XHtOcrA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CrawlerControl","ResultsDisplay","axios","jsxDEV","_jsxDEV","App","_s","results","setResults","loading","setLoading","message","setMessage","handleStartCrawl","response","post","console","log","data","success","fetchResults","error","get","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onStartCrawl","_c","$RefreshReg$"],"sources":["E:/thesis web crawler/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport CrawlerControl from \"./components/CrawlerControl\";\r\nimport ResultsDisplay from \"./components/ResultsDisplay\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleStartCrawl = async () => {\r\n    setLoading(true);\r\n    setMessage(\"\");\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/start-crawl\");\r\n\r\n      console.log(response);\r\n\r\n      if (response.data.success == true) {\r\n        setMessage(\"Crawling completed successfully!\");\r\n        fetchResults(); // Fetch updated results after crawling\r\n      } else {\r\n        setMessage(\"Crawling failed.\");\r\n      }\r\n    } catch (error) {\r\n      setMessage(\"An error occurred while starting the crawl.\");\r\n      console.error(\"Error starting crawl:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchResults = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/results\");\r\n      setResults(response.data.data);\r\n    } catch (error) {\r\n      setMessage(\"Failed to fetch results.\");\r\n      console.error(\"Error fetching results:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Chatbot Detection Web Crawler</h1>\r\n      <CrawlerControl\r\n        onStartCrawl={handleStartCrawl}\r\n        loading={loading}\r\n        message={message}\r\n      />\r\n      <ResultsDisplay results={results} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMc,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnCH,UAAU,CAAC,IAAI,CAAC;IAChBE,UAAU,CAAC,EAAE,CAAC;IACd,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,mCAAmC,CAAC;MAEtEC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MAErB,IAAIA,QAAQ,CAACI,IAAI,CAACC,OAAO,IAAI,IAAI,EAAE;QACjCP,UAAU,CAAC,kCAAkC,CAAC;QAC9CQ,YAAY,CAAC,CAAC,CAAC,CAAC;MAClB,CAAC,MAAM;QACLR,UAAU,CAAC,kBAAkB,CAAC;MAChC;IACF,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdT,UAAU,CAAC,6CAA6C,CAAC;MACzDI,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,SAAS;MACRX,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMZ,KAAK,CAACoB,GAAG,CAAC,+BAA+B,CAAC;MACjEd,UAAU,CAACM,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC;IAChC,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdT,UAAU,CAAC,0BAA0B,CAAC;MACtCI,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA;MAAAoB,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCxB,OAAA,CAACJ,cAAc;MACb6B,YAAY,EAAEhB,gBAAiB;MAC/BJ,OAAO,EAAEA,OAAQ;MACjBE,OAAO,EAAEA;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFxB,OAAA,CAACH,cAAc;MAACM,OAAO,EAAEA;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV;AAACtB,EAAA,CAhDQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}