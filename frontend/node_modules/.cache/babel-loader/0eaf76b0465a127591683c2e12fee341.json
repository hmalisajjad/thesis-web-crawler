{"ast":null,"code":"var _jsxFileName = \"E:\\\\thesis web crawler\\\\frontend\\\\src\\\\components\\\\CrawlerControl.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/CrawlerControl.js\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CrawlerControl() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const handleStartCrawl = async () => {\n    setLoading(true);\n    setMessage(\"\");\n    try {\n      const response = await axios.post(\"/start_crawl\");\n      if (response.data.status === \"Crawling completed\") {\n        setMessage(\"Crawling completed successfully!\");\n      } else {\n        setMessage(\"Crawling failed.\");\n      }\n    } catch (error) {\n      setMessage(\"An error occurred while starting the crawl.\");\n      console.error(\"Error starting crawl:\", error);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crawler-control\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Start a New Crawl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartCrawl,\n      disabled: loading,\n      children: loading ? \"Crawling...\" : \"Start Crawling\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(CrawlerControl, \"aahTtd7vobzsyrQXSpsjHR+FvKo=\");\n_c = CrawlerControl;\nexport default CrawlerControl;\nvar _c;\n$RefreshReg$(_c, \"CrawlerControl\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CrawlerControl","_s","loading","setLoading","message","setMessage","handleStartCrawl","response","post","data","status","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/thesis web crawler/frontend/src/components/CrawlerControl.js"],"sourcesContent":["// frontend/src/components/CrawlerControl.js\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction CrawlerControl() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleStartCrawl = async () => {\r\n    setLoading(true);\r\n    setMessage(\"\");\r\n    try {\r\n      const response = await axios.post(\"/start_crawl\");\r\n      if (response.data.status === \"Crawling completed\") {\r\n        setMessage(\"Crawling completed successfully!\");\r\n      } else {\r\n        setMessage(\"Crawling failed.\");\r\n      }\r\n    } catch (error) {\r\n      setMessage(\"An error occurred while starting the crawl.\");\r\n      console.error(\"Error starting crawl:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"crawler-control\">\r\n      <h2>Start a New Crawl</h2>\r\n      <button onClick={handleStartCrawl} disabled={loading}>\r\n        {loading ? \"Crawling...\" : \"Start Crawling\"}\r\n      </button>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CrawlerControl;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnCH,UAAU,CAAC,IAAI,CAAC;IAChBE,UAAU,CAAC,EAAE,CAAC;IACd,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,cAAc,CAAC;MACjD,IAAID,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,oBAAoB,EAAE;QACjDL,UAAU,CAAC,kCAAkC,CAAC;MAChD,CAAC,MAAM;QACLA,UAAU,CAAC,kBAAkB,CAAC;MAChC;IACF,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdN,UAAU,CAAC,6CAA6C,CAAC;MACzDO,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;IACAR,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACEJ,OAAA;IAAKc,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9Bf,OAAA;MAAAe,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BnB,OAAA;MAAQoB,OAAO,EAAEb,gBAAiB;MAACc,QAAQ,EAAElB,OAAQ;MAAAY,QAAA,EAClDZ,OAAO,GAAG,aAAa,GAAG;IAAgB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EACRd,OAAO,iBAAIL,OAAA;MAAAe,QAAA,EAAIV;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV;AAACjB,EAAA,CA9BQD,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AAgCvB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}