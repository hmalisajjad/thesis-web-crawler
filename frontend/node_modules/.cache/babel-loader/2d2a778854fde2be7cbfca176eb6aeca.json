{"ast":null,"code":"var _jsxFileName = \"E:\\\\thesis web crawler\\\\frontend\\\\src\\\\components\\\\ResultsDisplay.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/ResultsDisplay.js\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultsDisplay() {\n  _s();\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const fetchResults = async () => {\n    setLoading(true);\n    setMessage(\"\");\n    try {\n      const response = await axios.get(\"http://localhost:5000/results\");\n      console.log(JSON.stringify(response.data.data));\n      setResults(JSON.stringify(response.data.data));\n    } catch (error) {\n      setMessage(\"No results found or an error occurred.\");\n      console.error(\"Error fetching results:\", error);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    // Fetch results initially and set up polling every 30 seconds\n    fetchResults();\n    const interval = setInterval(() => {\n      fetchResults();\n    }, 30000); // 30 seconds\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Crawl Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading results...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this), !loading && results.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Chatbots Detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Keywords Detected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date Collected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Array.isArray(results) && results.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: item.url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: item.url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.detected_chatbots.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: item.detected_chatbots.map((chatbot, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: chatbot,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: [\"Chatbot \", idx + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 29\n                }, this)\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 23\n            }, this) : \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.keywords_detected.join(\", \") || \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.date_collected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(ResultsDisplay, \"4XI8zU5/cOs51Ju+TSws2ieRmkc=\");\n_c = ResultsDisplay;\nexport default ResultsDisplay;\nvar _c;\n$RefreshReg$(_c, \"ResultsDisplay\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ResultsDisplay","_s","results","setResults","loading","setLoading","message","setMessage","fetchResults","response","get","console","log","JSON","stringify","data","error","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Array","isArray","map","item","index","href","url","target","rel","title","detected_chatbots","chatbot","idx","keywords_detected","join","date_collected","_c","$RefreshReg$"],"sources":["E:/thesis web crawler/frontend/src/components/ResultsDisplay.js"],"sourcesContent":["// frontend/src/components/ResultsDisplay.js\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction ResultsDisplay() {\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const fetchResults = async () => {\r\n    setLoading(true);\r\n    setMessage(\"\");\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/results\");\r\n      console.log(JSON.stringify(response.data.data));\r\n\r\n      setResults(JSON.stringify(response.data.data));\r\n    } catch (error) {\r\n      setMessage(\"No results found or an error occurred.\");\r\n      console.error(\"Error fetching results:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch results initially and set up polling every 30 seconds\r\n    fetchResults();\r\n    const interval = setInterval(() => {\r\n      fetchResults();\r\n    }, 30000); // 30 seconds\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"results-display\">\r\n      <h2>Crawl Results</h2>\r\n      {loading && <p>Loading results...</p>}\r\n      {message && <p>{message}</p>}\r\n      {!loading && results.length > 0 && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>URL</th>\r\n              <th>Title</th>\r\n              <th>Chatbots Detected</th>\r\n              <th>Keywords Detected</th>\r\n              <th>Date Collected</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Array.isArray(results) &&\r\n              results.map((item, index) => (\r\n                <tr key={index}>\r\n                  <td>\r\n                    <a\r\n                      href={item.url}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {item.url}\r\n                    </a>\r\n                  </td>\r\n                  <td>{item.title}</td>\r\n                  <td>\r\n                    {item.detected_chatbots.length > 0 ? (\r\n                      <ul>\r\n                        {item.detected_chatbots.map((chatbot, idx) => (\r\n                          <li key={idx}>\r\n                            <a\r\n                              href={chatbot}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                            >\r\n                              Chatbot {idx + 1}\r\n                            </a>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    ) : (\r\n                      \"None\"\r\n                    )}\r\n                  </td>\r\n                  <td>{item.keywords_detected.join(\", \") || \"None\"}</td>\r\n                  <td>{item.date_collected}</td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultsDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}